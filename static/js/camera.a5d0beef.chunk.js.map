{"version":3,"sources":["pages/animations/fade-in.tsx","pages/animations/index.ts","pages/page-wrapper.tsx","components/icons.tsx","modules/client/actions.ts","shared/use-window-size.ts","components/camera-output/use-media-stream.ts","components/camera-output/use-take-picture-callback.ts","components/camera-output/desktop-media-stream-creator.ts","components/camera-output/mobile-media-stream-creator.ts","components/camera-output/styles.ts","components/camera-output/camera-output.tsx","pages/camera/styles.ts","pages/camera/layout.tsx"],"names":["fadeIn","keyframes","Animations","FadeIn","styled","div","props","duration","PageWrapper","children","style","width","height","Icon","type","icon","BackIcon","faChevronLeft","CantDisplayIcon","faEyeSlash","CameraIcon","faCamera","changeStage","createAsyncThunk","arg","thunkAPI","setTimeout","dispatch","clientSlice","actions","stage","ms","setSnapshot","snapshot","nextStage","useWindowSize","React","useState","window","innerWidth","setWidth","innerHeight","setHeight","useEffect","handler","addEventListener","removeEventListener","createMediaStream","creators","config","a","creator","console","error","lastError","takePictureFromVideo","options","video","canvas","document","createElement","context","getContext","drawImage","canvasToBlob","Promise","resolve","toBlob","blob","desktopMediaStreamCreator","navigator","mediaDevices","getUserMedia","facingMode","exact","stream","needToFlip","mobileMediaStreamCreator","ideal","horizontalMobileMediaStreamCreator","Container","Video","flip","Error","PhotoButtons","LeftPhotoButton","PhotoButtonContainer","disabled","LoadPhotoInput","input","CameraOutput","takeSnapshotElement","loadPhotoElement","onLoadPhoto","videoRef","mediaStreamCreators","descriptor","setDescriptor","setError","then","catch","getVideoTracks","map","track","stop","Object","values","useMediaStream","current","srcObject","takePicture","handleClick","picture","ref","autoPlay","onLoad","onClick","LoadPhotoButton","handleChange","event","file","currentTarget","files","item","Blob","arrayBuffer","htmlFor","id","accept","onChange","LoadButtonContainer","PhotoButton","Layout","useDispatch","handleLoadPhoto","photo"],"mappings":"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","file":"static/js/camera.a5d0beef.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\ntype FadeInProps = {\n    duration: number;\n};\n\nexport const FadeIn = styled.div<FadeInProps>`\n    animation: ${fadeIn} ${(props) => props.duration}s linear 1;\n`;\n","import { FadeIn } from \"pages/animations/fade-in\";\n\nexport const Animations = {\n    FadeIn,\n};\n","import { Animations } from \"pages/animations\";\nimport * as React from \"react\";\n\nexport const PageWrapper: React.FC = ({ children }) => {\n    return (\n        <Animations.FadeIn\n            duration={1}\n            style={{\n                width: \"100%\",\n                height: \"100%\",\n            }}\n        >\n            {children}\n        </Animations.FadeIn>\n    );\n};\n","import { IconName } from \"@fortawesome/fontawesome-common-types\";\nimport { IconDefinition } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    faCamera,\n    faChevronLeft,\n    faEyeSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as React from \"react\";\n\ntype IconProps = {\n    type: IconName | IconDefinition;\n};\n\nexport const Icon: React.FC<IconProps> = ({ type }) => {\n    return <FontAwesomeIcon icon={type} />;\n};\n\nexport const BackIcon = () => <Icon type={faChevronLeft} />;\n\nexport const CantDisplayIcon = () => <Icon type={faEyeSlash} />;\n\nexport const CameraIcon = () => <Icon type={faCamera} />;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { AppStage, clientSlice, Snapshot } from \"modules/client/slice\";\n\ntype ChangeStageArg = {\n    ms: number;\n    stage: AppStage;\n};\n\nexport const changeStage = createAsyncThunk<void, ChangeStageArg>(\n    \"client/change-stage\",\n    (arg, thunkAPI) => {\n        setTimeout(() => {\n            setTimeout(() => {\n                thunkAPI.dispatch(clientSlice.actions.changeStage(arg.stage));\n            }, arg.ms);\n        });\n    }\n);\n\ntype SetSnapshotArg = {\n    snapshot: Snapshot;\n    nextStage: AppStage;\n};\n\nexport const setSnapshot = createAsyncThunk<void, SetSnapshotArg>(\n    \"client/set-sbapshot\",\n    ({ snapshot, nextStage }, thunkAPI) => {\n        thunkAPI.dispatch(clientSlice.actions.setSnapshot(snapshot));\n        thunkAPI.dispatch(changeStage({ stage: nextStage, ms: 0 }));\n    }\n);\n","import React from \"react\";\n\nexport const useWindowSize = () => {\n    const [width, setWidth] = React.useState(window.innerWidth);\n    const [height, setHeight] = React.useState(window.innerHeight);\n\n    React.useEffect(() => {\n        const handler = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n\n        window.addEventListener(\"resize\", handler);\n\n        return () => window.removeEventListener(\"resize\", handler);\n    }, [setWidth, setHeight]);\n\n    return [width, height];\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport * as React from \"react\";\n\nexport type MediaStreamConfig = {\n    width: number;\n    height: number;\n};\n\nexport type MediaStreamDescriptor = {\n    stream: MediaStream | null;\n    needToFlip?: boolean;\n};\n\nexport type MediaStreamCreator = (\n    config: MediaStreamConfig\n) => Promise<MediaStreamDescriptor> | null;\n\nexport const useMediaStream = (\n    mediaStreamCreators: MediaStreamCreator[],\n    config: MediaStreamConfig\n): [MediaStreamDescriptor | null, string | undefined] => {\n    const [\n        descriptor,\n        setDescriptor,\n    ] = React.useState<MediaStreamDescriptor | null>(null);\n    const [error, setError] = React.useState<string>();\n\n    React.useEffect(() => {\n        createMediaStream(mediaStreamCreators, config)\n            .then((stream) => stream && setDescriptor(stream))\n            .catch((error) => setError(error));\n\n        return () => {\n            descriptor?.stream?.getVideoTracks().map((track) => track.stop());\n        };\n    }, [\n        setDescriptor,\n        setError,\n        ...Object.values(config),\n        ...mediaStreamCreators,\n    ]);\n\n    return [descriptor, error];\n};\n\nconst createMediaStream = async (\n    creators: MediaStreamCreator[],\n    config: MediaStreamConfig\n) => {\n    let lastError;\n\n    for (const creator of creators) {\n        try {\n            return await creator(config);\n        } catch (error) {\n            console.error(\"MediaStreamCreator\", error);\n\n            lastError = error;\n        }\n    }\n\n    throw lastError;\n};\n","import * as React from \"react\";\n\ntype UseTakePictureCallbackProps = {\n    video: HTMLVideoElement | null;\n    width: number;\n    height: number;\n};\n\nexport const useTakePictureCallback = (\n    options: UseTakePictureCallbackProps\n) => {\n    return React.useCallback(() => {\n        return takePictureFromVideo(options);\n    }, [options]);\n};\n\ntype TakePictureFromVideoProps = UseTakePictureCallbackProps;\n\nconst takePictureFromVideo = async (options: TakePictureFromVideoProps) => {\n    if (options.video == null) {\n        return null;\n    }\n\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n\n    if (context == null) {\n        return null;\n    }\n\n    canvas.width = options.width;\n    canvas.height = options.height;\n\n    context.drawImage(options.video, 0, 0, options.width, options.height);\n\n    return await canvasToBlob(canvas);\n};\n\nconst canvasToBlob = (canvas: HTMLCanvasElement) => {\n    return new Promise<Blob | null>((resolve) => {\n        canvas.toBlob((blob) => resolve(blob));\n    });\n};\n","import { MediaStreamCreator } from \"./use-media-stream\";\n\nexport const desktopMediaStreamCreator: MediaStreamCreator = async (config) => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n            facingMode: { exact: \"user\" },\n            width: config.width,\n            height: config.height,\n        },\n    });\n\n    return {\n        stream,\n        needToFlip: true,\n    };\n};\n","import { MediaStreamCreator } from \"./use-media-stream\";\n\nexport const mobileMediaStreamCreator: MediaStreamCreator = async (config) => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n            facingMode: { exact: \"environment\" },\n            width: { ideal: config.height },\n            height: { ideal: config.width },\n        },\n    });\n\n    return {\n        stream,\n    };\n};\n\nexport const horizontalMobileMediaStreamCreator: MediaStreamCreator = async (\n    config\n) => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n            facingMode: { exact: \"environment\" },\n            width: { ideal: config.width },\n            height: { ideal: config.height },\n        },\n    });\n\n    return {\n        stream,\n    };\n};\n","import styled from \"styled-components\";\n\ntype ContainerProps = {\n    width: number;\n    height: number;\n};\n\nexport const Container = styled.div<ContainerProps>`\n    position: relative;\n    width: ${({ width }) => width}px;\n    height: ${({ height }) => height}px;\n    background-color: black;\n`;\n\ntype VideoProps = {\n    flip: boolean;\n};\n\nexport const Video = styled.video<VideoProps>`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transform: scaleX(${({ flip }) => (flip ? \"-1\" : \"1\")});\n`;\n\nexport const Error = styled.div`\n    color: white;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 50px;\n`;\n\nexport const PhotoButtons = styled.div`\n    width: 100%;\n    position: absolute;\n    bottom: 50px;\n    display: grid;\n\n    grid-template-areas: \"left center right\";\n`;\n\nexport const LeftPhotoButton = styled.div`\n    grid-area: left;\n\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n`;\n\ntype PhotoButtonContainerProps = {\n    disabled?: boolean;\n};\n\nexport const PhotoButtonContainer = styled.div<PhotoButtonContainerProps>`\n    grid-area: center;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n    pointer-events: ${({ disabled }) => (disabled ? \"none\" : \"auto\")};\n`;\n\nexport const LoadPhotoInput = styled.input`\n    display: none;\n`;\n","import { useMediaStream } from \"components/camera-output/use-media-stream\";\nimport { useTakePictureCallback } from \"components/camera-output/use-take-picture-callback\";\nimport { CantDisplayIcon } from \"components/icons\";\nimport * as React from \"react\";\nimport { desktopMediaStreamCreator } from \"./desktop-media-stream-creator\";\nimport {\n    horizontalMobileMediaStreamCreator,\n    mobileMediaStreamCreator,\n} from \"./mobile-media-stream-creator\";\nimport {\n    Container,\n    Error,\n    LeftPhotoButton,\n    LoadPhotoInput,\n    PhotoButtonContainer,\n    PhotoButtons,\n    Video,\n} from \"./styles\";\n\ntype CameraOutputProps = {\n    width: number;\n    height: number;\n    takeSnapshotElement: React.ReactElement;\n    loadPhotoElement: React.ReactElement;\n    onLoadPhoto: (snapshot: Blob) => void;\n};\n\nexport const CameraOutput: React.FC<CameraOutputProps> = ({\n    height,\n    width,\n    takeSnapshotElement,\n    loadPhotoElement,\n    onLoadPhoto,\n}) => {\n    const videoRef = React.useRef<HTMLVideoElement>(null);\n\n    const [descriptor, error] = useMediaStream(\n        [\n            mobileMediaStreamCreator,\n            horizontalMobileMediaStreamCreator,\n            desktopMediaStreamCreator,\n        ],\n        { height, width }\n    );\n\n    React.useEffect(() => {\n        if (videoRef.current && descriptor) {\n            videoRef.current.srcObject = descriptor.stream;\n        }\n    }, [descriptor]);\n\n    const takePicture = useTakePictureCallback({\n        video: videoRef.current,\n        width,\n        height,\n    });\n\n    const handleClick = React.useCallback(async () => {\n        const picture = await takePicture();\n\n        if (picture) {\n            onLoadPhoto(picture);\n        }\n    }, [takePicture, onLoadPhoto]);\n\n    return (\n        <Container width={width} height={height}>\n            <Video ref={videoRef} flip={!!descriptor?.needToFlip} autoPlay />\n\n            {error && !descriptor?.stream && (\n                <Error>\n                    <CantDisplayIcon />\n                </Error>\n            )}\n\n            <PhotoButtons>\n                <LoadPhotoButton onLoad={onLoadPhoto}>\n                    {loadPhotoElement}\n                </LoadPhotoButton>\n\n                <PhotoButtonContainer\n                    onClick={handleClick}\n                    disabled={!descriptor || !!error}\n                >\n                    {takeSnapshotElement}\n                </PhotoButtonContainer>\n            </PhotoButtons>\n        </Container>\n    );\n};\n\ntype LoadPhotoButtonProps = {\n    onLoad: (photo: Blob) => void;\n};\n\nconst LoadPhotoButton: React.FC<LoadPhotoButtonProps> = ({\n    children,\n    onLoad,\n}) => {\n    const handleChange = React.useCallback(\n        async (event: React.ChangeEvent<HTMLInputElement>) => {\n            const file = event.currentTarget.files?.item(0);\n\n            if (file) {\n                const blob = new Blob([await file.arrayBuffer()]);\n\n                onLoad(blob);\n            }\n        },\n        [onLoad]\n    );\n\n    return (\n        <LeftPhotoButton>\n            <label htmlFor={\"photo\"}>{children}</label>\n            <LoadPhotoInput\n                type={\"file\"}\n                id={\"photo\"}\n                accept={\"image/*\"}\n                onChange={handleChange}\n            />\n        </LeftPhotoButton>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`;\n\nexport const PhotoButtonContainer = styled.div`\n    --size: 70px;\n\n    background-color: white;\n    width: var(--size);\n    height: var(--size);\n    border-radius: calc(var(--size) / 2);\n\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n\n    &:active {\n        opacity: 0.8;\n    }\n`;\n\nexport const LoadButtonContainer = styled.div`\n    color: white;\n    font-size: 25px;\n`;\n","import { CameraOutput } from \"components/camera-output\";\nimport { CameraIcon } from \"components/icons\";\nimport { setSnapshot } from \"modules/client/actions\";\nimport {\n    Container,\n    PhotoButtonContainer,\n    LoadButtonContainer,\n} from \"pages/camera/styles\";\nimport { PageWrapper } from \"pages/page-wrapper\";\nimport * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useWindowSize } from \"../../shared/use-window-size\";\n\nconst Layout: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const handleLoadPhoto = React.useCallback(\n        (photo: Blob) => {\n            dispatch(\n                setSnapshot({\n                    snapshot: photo,\n                    nextStage: \"prediction\",\n                })\n            );\n        },\n        [dispatch]\n    );\n\n    const [width, height] = useWindowSize();\n\n    return (\n        <PageWrapper>\n            <Container>\n                <CameraOutput\n                    width={width}\n                    height={height}\n                    takeSnapshotElement={<PhotoButton />}\n                    loadPhotoElement={<LoadPhotoButton />}\n                    onLoadPhoto={handleLoadPhoto}\n                />\n            </Container>\n        </PageWrapper>\n    );\n};\n\nconst PhotoButton: React.FC = () => {\n    return <PhotoButtonContainer />;\n};\n\nconst LoadPhotoButton: React.FC = () => {\n    return (\n        <LoadButtonContainer>\n            <CameraIcon />\n        </LoadButtonContainer>\n    );\n};\n\nexport default Layout;\n"],"sourceRoot":""}